"use strict";var _typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e};!function(e){"object"===("undefined"==typeof module?"undefined":_typeof(module))&&"object"===_typeof(module.exports)?e(require("jquery"),window,document):e(jQuery,window,document)}(function(e,t,n,o){e.tokenizer={version:"1.0",KEY_CODE:{ARROW_DOWN:40,ARROW_LEFT:37,ARROW_RIGHT:39,ARROW_TOP:38,BACKSPACE:32,COMMA:188,CTRL:17,DEL:8,DOT:190,ENTER:13,ESC:27,SHIFT:16,SUPR:46,TAB:9}},e.fn.tokenizer=function(){function t(e){var t=e.filter(function(t,n){return e.indexOf(t)===n});return t}function o(t){var n=e("<div></div>").addClass("tokenizer-values").width(t.width()-7);return n}function r(t){e(".tokenizer-token",t.parent()).remove()}function i(t){t.each(function(){e(this).remove()})}function a(t,n){var o=e("<span></span>").addClass("tokenizer-token").text(t).attr("data-value",t).prepend(e("<span></span>").addClass("tokenizer-token-close").text("x"));return o.on("click",n.onClickToken),o.find("span").on("click",function(){return i(o)}),o}function u(t,n){var o=a(e.fn.tokenizer.defaults.text.max_all,n);o.addClass("tokenizer-token-max"),o.removeAttr("data-value"),t.append(o),setTimeout(function(){i(o)},1500)}function s(t){var n=[];return e(".tokenizer-token[data-value]",t.parent()).each(function(){n.push(e(this).attr("data-value"))}),n}function l(e){var t="["+e.map(function(e){return e}).join("")+"]";return new RegExp(t)}function f(e,t,n,o){r(e),t.forEach(function(e){if(e.trim()){var t=a(e,o);n.append(t)}})}var d=this,c={get:function(e){if(e.length>1)throw new Error("Número de argumentos inválidos, se requiere ('option') solamente");return s(d)},set:function(t){var n;if(2!=t.length)throw new Error("Número de argumentos inválidos, se requiere ('option', String|Array)");if("string"==typeof t[1])n=t[1];else{if(!(t[1]instanceof Array))throw new Error("Segundo parámetro inválido, se requiere ('option', String|Array)");n=t[1].join(e.fn.tokenizer.defaults.separators[0])}return d.val(n),d.trigger(e.Event("keydown",{keyCode:e.tokenizer.KEY_CODE.ENTER})),d},del:function(t){if(2!=t.length)throw new Error("Número de argumentos inválidos, se requiere ('option', String)");if("string"!=typeof t[1])throw new Error("Segundo parámetro inválido, se requiere ('option', String)");return i(e(".tokenizer-token[data-value='"+t[1]+"']")),d}};if(!arguments.length||e.isPlainObject(arguments[0])){var p=arguments.length?arguments[0]:{};return e(n).on("keydown",function(t){if(t.keyCode==e.tokenizer.KEY_CODE.SUPR){var n=e(".tokenizer-token-active");i(e(".tokenizer-token-active")),e.fn.tokenizer.defaults.onDeleteToken(n)}}),p=e.extend({},e.fn.tokenizer.defaults,p),d.each(function(){var n=e(this),r=e("<div></div>").addClass("tokenizer-wrapper").width(n.width());n.wrap(r);var i=o(n);n.parent().append(i),n.css("margin-bottom","0px"),n.off().on("keydown",function(e){if(e.keyCode==p.keyCodeCreate){if(e.preventDefault(),n.val().trim()){var o=l(p.separators),r=n.val().split(o);p.max_input&&(r=r.splice(0,p.max_input));var r=s(n).concat(r),a=!1;if(p.max_all>0){var d=r.length;r=r.splice(0,p.max_all),d!=r.length&&(a=!0)}p.repeat||(r=t(r)),f(n,r,i,p),a&&u(i,p)}n.val("")}})})}switch(arguments[0]){case"get":case"val":return c.get(arguments);case"set":case"input":return c.set(arguments);case"del":case"delete":case"rm":case"remove":return c.del(arguments);default:throw new Error("Opción '"+arguments[0]+"' no válida")}},e.fn.tokenizer.defaults={separators:[",",";"],keyCodeCreate:e.tokenizer.KEY_CODE.ENTER,repeat:!1,max_all:0,max_input:0,text:{max_all:"Máximo alcanzado"},onClickToken:function(){e(this).toggleClass("tokenizer-token-active")},onDeleteToken:function(){}}});
//# sourceMappingURL=data:application/json;charset=utf8;base64,
